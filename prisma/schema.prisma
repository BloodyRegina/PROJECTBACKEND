generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  user_id      String       @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  email        String       @unique
  password     String
  picture      String?
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  readingLists ReadingList[]
  reviews      Review[]     // เพิ่มความสัมพันธ์ย้อนกลับ
}

model Book {
  book_id             String       @id @default(auto()) @map("_id") @db.ObjectId
  title               String
  author              String?
  publish_year        Int?
  description         String?
  book_photo          String?
  summary             String?
  categories          BookCategory[]
  readingLists        ReadingList[]
  reviews             Review[]       // เพิ่มความสัมพันธ์กลับไปยังโมเดล Review
  added_to_list_count Int          @default(0) // จำนวนครั้งที่หนังสือถูกเพิ่มในรายการอ่าน
  average_rating      Float?         // ค่าเฉลี่ยของคะแนน
  review_count        Int          @default(0) // จำนวนรีวิวของหนังสือ
}

enum ReadingStatus {
  TO_READ
  READING
  COMPLETED
}

model ReadingList {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  user_id     String        @db.ObjectId
  book_id     String        @db.ObjectId
  status      ReadingStatus @default(TO_READ)
  add_date    DateTime      @default(now())
  finish_date DateTime?
  start_date  DateTime?

  user        User          @relation(fields: [user_id], references: [user_id])
  book        Book          @relation(fields: [book_id], references: [book_id])

  @@unique([user_id, book_id])
}

model BookCategory {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  book_id     String @db.ObjectId
  category_id String @db.ObjectId

  book        Book     @relation(fields: [book_id], references: [book_id])
  category    Category @relation(fields: [category_id], references: [category_id])

  @@unique([book_id, category_id]) // ใช้ unique constraint แทน compound id
}

model Category {
  category_id String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  books       BookCategory[]
}

model Review {
  review_id   String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id     String   @db.ObjectId
  book_id     String   @db.ObjectId
  rating      Int      @default(0)
  comment     String?
  review_date DateTime @default(now())

  user        User     @relation(fields: [user_id], references: [user_id])
  book        Book     @relation(fields: [book_id], references: [book_id])

  @@unique([user_id, book_id])
}